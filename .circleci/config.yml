version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@3.2
  aws-cli: circleci/aws-cli@1.0.0
  browser-tools: circleci/browser-tools@1.1.3

executors:
  builder:
    docker:
      - image: cimg/node:14.15.3-browsers
    working_directory: ~/app

jobs:
  build:
    executor: builder
    steps:
      - checkout
#      - run:
#          name: Update npm
#          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm --version && npm ci
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
          - node_modules
      - run:
          name: Linter check
          command: npm run lint
      - run:
          command: |
            npm run build
      - persist_to_workspace:
          root: .
          paths:
          - node_modules
          - assets/stylesheets
  test:
    executor: builder
    steps:
    - checkout
    - restore_cache:
        key: dependency-cache-{{ checksum "package-lock.json" }}
    - run:
        name: unit tests
        command: npm run test
    - store_test_results:
        path: ./reports
  integration_tests:
    working_directory: ~/app
    docker:
      - image: cimg/node:14.15.3-browsers
      - image: circleci/postgres:alpine-ram
        environment:
          POSTGRES_USER: form-builder
          POSTGRES_DB: form-builder
      - image: redis
      - image: localstack/localstack:0.11.2
        environment:
          SERVICES: sqs
          PORT_WEB_UI: 8088
          DATA_DIR: /tmp/localstack/data
          TMP_DIR: /private
          DEFAULT_REGION: eu-west-2
    steps:
      - aws-cli/install
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Wait for localstack to start before creating resources
          command: sleep 10
      - run:
          name: Create localstack queues
          command: |
            export AWS_PAGER=""
            aws --endpoint-url http://localhost:4576 sqs create-queue --queue-name event
            aws --endpoint-url http://localhost:4576 sqs create-queue --queue-name risk_profiler_change
      - run:
          name: Run the node app.
          command: npm start
          background: true
      - run:
          name: Wait for node app to start
          command: sleep 5
      - restore_cache:
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: gradle-cache-{{ checksum "integration-tests/build.gradle" }}
      - run:
          name: Run Integration Tests
          command: chmod +x gradlew && ./gradlew build
      - save_cache:
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
          paths:
            - /home/circleci/.gradle/wrapper
      - save_cache:
          key: gradle-cache-{{ checksum "integration-tests/build.gradle" }}
          paths:
            - /home/circleci/.gradle/caches
      - store_artifacts:
          path: integration-tests/build/reports
          destination: integration/spock
      - store_artifacts:
          path: integration-tests/build/geb-reports
          destination: integration/geb
      - store_test_results:
          path: integration-tests/build/test-results

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              ignore: /.*/
      - test:
          requires:
            - build
      - integration_tests:
          requires:
          - test
      - hmpps/helm_lint:
          name: helm_lint
      - hmpps/build_docker:
          name: build_docker
          filters:
            branches:
              only:
                - main
      - hmpps/deploy_env:
          name: deploy_dev
          env: "dev"
          context:
            - hmpps-common-vars
          filters:
            branches:
              only:
                - main
          requires:
            - helm_lint
            - test
            - integration_tests
            - build_docker
      - request-preprod-approval:
          type: approval
          requires:
            - deploy_dev
      - hmpps/deploy_env:
          name: deploy_preprod
          env: "preprod"
          context:
            - offender-categorisation-preprod
            - hmpps-common-vars
          requires:
            - request-preprod-approval
      - request-prod-approval:
          type: approval
          requires:
            - deploy_preprod
      - hmpps/deploy_env:
          name: deploy_prod
          env: "prod"
          slack_notification: true
          context:
            - offender-categorisation-prod
            - hmpps-common-vars
          requires:
            - request-prod-approval

  security:
    triggers:
      - schedule:
          cron: "0 6 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/npm_security_audit:
          context:
            - hmpps-common-vars
      - hmpps/veracode_policy_scan:
          context:
            - veracode-credentials
            - hmpps-common-vars
